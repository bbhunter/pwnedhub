{
	"info": {
		"_postman_id": "3f531d90-5459-4681-9633-c45247717765",
		"name": "PwnedAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17127113"
	},
	"item": [
		{
			"name": "Token Create Init (Login)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Login passwordless initialization test\", function () {",
							"    pm.response.to.have.status(403);",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"code_token\", jsonData.code_token);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{email}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{endpoint}}/access-token",
					"host": [
						"{{endpoint}}"
					],
					"path": [
						"access-token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Token Create Code (Login)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Login passwordless code test\", function () {",
							"    pm.response.to.have.status(201);",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"access_token\", jsonData.access_token);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"code\": \"{{code}}\",\n    \"code_token\": \"{{code_token}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{endpoint}}/access-token",
					"host": [
						"{{endpoint}}"
					],
					"path": [
						"access-token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Token Create Google (Login)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Login Google OIDC test\", function () {",
							"    pm.response.to.have.status(201);",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"access_token\", jsonData.access_token);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id_token\": \"{{google_id_token}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{endpoint}}/access-token",
					"host": [
						"{{endpoint}}"
					],
					"path": [
						"access-token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Token Delete (Logout)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Logout test\", function () {",
							"    pm.response.to.have.status(204);",
							"    pm.collectionVariables.set(\"access_token\", null);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{endpoint}}/access-token",
					"host": [
						"{{endpoint}}"
					],
					"path": [
						"access-token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Users Read",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Users read list test\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{endpoint}}/users",
					"host": [
						"{{endpoint}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "User Create Init (Register)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Registration initialization test\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{email}}\",\n    \"name\": \"Test User\",\n    \"avatar\": \"https://www.gravatar.com/avatar/0a6d9b1ad59ad436bf9d9d16b2a7133e.png?s=300\",\n    \"signature\": \"This is my signature.\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{endpoint}}/users",
					"host": [
						"{{endpoint}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "User Create Activation (Register)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Registration activation test\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"activate_token\": \"{{activate_token}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{endpoint}}/users",
					"host": [
						"{{endpoint}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "User Read",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Users read instance test\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{endpoint}}/users/{{user_id}}",
					"host": [
						"{{endpoint}}"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "User Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Users update instance test\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{email}}\",\n    \"name\": \"Test User\",\n    \"avatar\": \"https://www.gravatar.com/avatar/0a6d9b1ad59ad436bf9d9d16b2a7133e.png?s=300\",\n    \"signature\": \"This is my signature.\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{endpoint}}/users/{{user_id}}",
					"host": [
						"{{endpoint}}"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "User Update (Admin)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Users admin update instance test\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"role\": 0,\n    \"status\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{endpoint}}/admin/users/5",
					"host": [
						"{{endpoint}}"
					],
					"path": [
						"admin",
						"users",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "Note Read",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Note read test\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{endpoint}}/notes",
					"host": [
						"{{endpoint}}"
					],
					"path": [
						"notes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Note Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Note update test\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"content\": \"##### Welcome to PwnedHub 2.0!\\n\\nA collaborative space to conduct hosted security assessments.\\n\\n**Find flaws.**\\n\\n* This is your notes space. Keep your personal notes here.\\n* Leverage popular security testing tools right from your browser in the tools space.\\n\\n**Collaborate.**\\n\\n* Privately collaborate with coworkers in the messaging space.\\n* Join public rooms in the messaging space to share information and socialize.\\n\\n**On the Move**\\n\\n* PwnedHub 2.0 is built with mobility in mind. No need for a separate app!\\n\\nHappy hunting!\\n\\n\\\\- The PwnedHub Team\\n\\n\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{endpoint}}/notes",
					"host": [
						"{{endpoint}}"
					],
					"path": [
						"notes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Room Messages Read",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Room messages read test\", function () {",
							"    pm.response.to.have.status(200);",
							"    var jsonData = pm.response.json();",
							"    if (jsonData.cursor === null) {",
							"        pm.collectionVariables.set(\"cursor\", \"\");",
							"    } else {",
							"        pm.collectionVariables.set(\"cursor\", jsonData.cursor);",
							"    } ",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if (pm.collectionVariables.get(\"cursor\") === \"\") {",
							"    pm.request.url.query.remove(\"cursor\");",
							"}",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{endpoint}}/rooms/1/messages?cursor={{cursor}}",
					"host": [
						"{{endpoint}}"
					],
					"path": [
						"rooms",
						"1",
						"messages"
					],
					"query": [
						{
							"key": "cursor",
							"value": "{{cursor}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Unfurl Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Link expansion test\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"url\": \"https://www.slack.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{endpoint}}/unfurl",
					"host": [
						"{{endpoint}}"
					],
					"path": [
						"unfurl"
					]
				}
			},
			"response": []
		},
		{
			"name": "Tools Read",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Tools read list test\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{endpoint}}/tools",
					"host": [
						"{{endpoint}}"
					],
					"path": [
						"tools"
					]
				}
			},
			"response": []
		},
		{
			"name": "Tool Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Tool create instance test\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"ID\",\n    \"path\": \"id\",\n    \"description\": \"Displays the user ID of the current shell user.\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{endpoint}}/tools",
					"host": [
						"{{endpoint}}"
					],
					"path": [
						"tools"
					]
				}
			},
			"response": []
		},
		{
			"name": "Tool Read",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Tools read instance test\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{endpoint}}/tools/1",
					"host": [
						"{{endpoint}}"
					],
					"path": [
						"tools",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Tool Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Tool delete instance test\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{endpoint}}/tools/1",
					"host": [
						"{{endpoint}}"
					],
					"path": [
						"tools",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Scans Read",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Scans read list test\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{endpoint}}/scans",
					"host": [
						"{{endpoint}}"
					],
					"path": [
						"scans"
					]
				}
			},
			"response": []
		},
		{
			"name": "Scan Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Scans create instance test\", function () {",
							"    pm.response.to.have.status(201);",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"scan_id\", jsonData.id);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"tid\": 1,\n    \"args\": \"www.practisec.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{endpoint}}/scans",
					"host": [
						"{{endpoint}}"
					],
					"path": [
						"scans"
					]
				}
			},
			"response": []
		},
		{
			"name": "Scan Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Scans delete instance test\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{endpoint}}/scans/{{scan_id}}",
					"host": [
						"{{endpoint}}"
					],
					"path": [
						"scans",
						"{{scan_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Scan Results Read",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Scans read instance test\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{endpoint}}/scans/{{scan_id}}/results",
					"host": [
						"{{endpoint}}"
					],
					"path": [
						"scans",
						"{{scan_id}}",
						"results"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "endpoint",
			"value": "http://api.pwnedhub.com",
			"type": "string"
		},
		{
			"key": "email",
			"value": "",
			"type": "string"
		},
		{
			"key": "code_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "code",
			"value": "",
			"type": "string"
		},
		{
			"key": "google_id_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "activate_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "cursor",
			"value": "",
			"type": "string"
		},
		{
			"key": "scan_id",
			"value": "",
			"type": "string"
		}
	]
}